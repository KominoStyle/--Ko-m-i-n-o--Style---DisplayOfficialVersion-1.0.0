/**
 * Provides methods for downloading files from URLs and HTML elements.
 */
export declare class Download {
    #private;
    /**
     * Creates a new instance of the Download class.
     * @param loggerConfig - (Optional) Configuration options for the Logger.
     */
    constructor(loggerConfig?: LoggerConfig);
    /**
     * Creates a folder at the given path if it does not exist.
     * @param path - The path of the folder to create.
     * @returns A Promise that resolves once the folder is created.
     */
    private createFolder;
    /**
     * Downloads a file from the given URL and saves it to the given path.
     * @param url - The URL of the file to download.
     * @param path - The path to save the downloaded file.
     * @param fileName - The name to use for the downloaded file.
     * @param index - (Optional) The index of the file to download (if downloading multiple files with the same name).
    //  * @param tooManyUrl - (Optional) If set to true, the download process will be slowed down to prevent response errors caused by making too many fetch requests simultaneously.
     * @returns A Promise that resolves once the file is downloaded.
     * @throws An error if the request fails or the response status is not OK.
     */
    fileFromUrl(url: string, path: string, fileName: string, index?: number): Promise<void>;
    /**
     * Downloads all images from the given HTML elements and saves them to the given path.
     * @param elements - The HTML elements from which to download images.
     * @param path - The path to save the downloaded images.
     * @param fileName - (Optional) The name to use for the downloaded images.
     */
    getAllImages(elements: HTMLElement[], path: string, fileName?: string): Promise<void>;
    /**
     * Downloads files from a set of URLs and saves them to the given path.
     * @param set - The set of URLs to download.
     * @param path - The path to save the downloaded files.
     * @param fileName - The name to use for the downloaded files.
     */
    private fileFromSet;
    /**
     * Downloads files from a set of ImageDescriptors and saves them to the given path.
     * @param set - The set of ImageDescriptors to download.
     * @param path - The path to save the downloaded files.
     */
    private fileFromdescriptor;
}
