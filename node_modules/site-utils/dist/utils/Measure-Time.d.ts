type MeasureParameters<T extends (...args: any) => unknown> = [...Parameters<T>];
type ExpectOptions = {
    year?: boolean;
    month?: boolean;
    week?: boolean;
};
export declare class MeasureTime {
    measureAsync<T extends (...args: any) => Promise<unknown>>(process: T, expect?: ExpectOptions, ...params: MeasureParameters<T>): Promise<string>;
    measure<T extends (...args: any) => unknown>(process: T, expect?: ExpectOptions, ...params: MeasureParameters<T>): string;
    private now;
    private elapsed;
    private formatTime;
}
export {};
