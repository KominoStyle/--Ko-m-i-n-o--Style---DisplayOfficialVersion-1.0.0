/// <reference types="jsdom" />
/// <reference types="jsdom" />
/// <reference types="jquery" />
/**
 * The `Site` class provides utility methods for interacting with websites.
 */
export declare class Site {
    /**
     * Provides a static instance of the Download class to easily download files.
     * @remarks The downloader instance can be accessed directly to download files without creating a new instance of the Download class.
     */
    private static downloader;
    /**
     * Gets the window object of a given domain URL.
     * @param domainURL - The URL of the domain to get the window object for.
     * @returns The window object of the given domain URL.
     */
    static getWindow(domainURL: string): Promise<import("jsdom").DOMWindow>;
    /**
     * Gets the document object of a given domain URL.
     * @param domainURL - The URL of the domain to get the document object for.
     * @returns The document object of the given domain URL.
     */
    static getDocument(domainURL: string): Promise<Document>;
    /**
     * Gets the jQuery object of a given domain URL.
     * @param domainURL - The URL of the domain to get the jQuery object for.
     * @returns The jQuery object of the given domain URL.
     */
    static get$(domainURL: string): Promise<JQueryStatic>;
    /**
     * Gets the jQuery object of a given HTML content.
     * @param HTML - The HTML content to get the jQuery object for.
     * @returns The jQuery object of the given HTML content.
     */
    private static get$HTML;
    /**
     * Gets the jQuery object of a given HTML content.
     * @param HTML - The HTML content to get the jQuery object for.
     * @returns The jQuery object of the given HTML content.
     */
    private static getHTML;
    /**
     * Gets the jQuery object for a given HTML element.
     * @param content - The HTML element or jQuery object to get the jQuery object from.
     * @returns A Promise that resolves to the jQuery object for the given element.
     * @throws An error if no usable content element is provided.
     */
    private static makeHTMLElementArray;
    /**
     * Downloads a file from a given URL.
     * @param url - The URL of the file to download.
     * @param path - The directory path where the downloaded file should be saved.
     * @param fileName - (Optional) The name to use for the downloaded file.
     * @returns A Promise that resolves to the downloaded file.
     */
    static downloadFile(url: string, path: string, fileName: string): Promise<void>;
    /**
     * Downloads all images from a given HTML content.
     * @param content - The HTML element from which to download images.
     * @param path - The directory path where the downloaded images should be saved.
     * @param fileName - (Optional) The name to use for the downloaded images.
     * @returns A Promise that resolves to the downloaded images.
     */
    static downloadAllImages(content: UseHTMLElement, path: string, fileName?: string): Promise<void>;
}
